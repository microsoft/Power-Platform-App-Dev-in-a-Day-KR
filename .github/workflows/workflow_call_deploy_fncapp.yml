name: 'On Called for Deploying Function Apps to Azure'

on:
  workflow_call:
    inputs:
      matrix_json:
        type: string
        required: true
        description: Matrix JSON array
      artifact_name:
        type: string
        required: false
        description: Artifact name
        default: 'app'
      github_branch_name:
        type: string
        required: false
        description: GitHub branch name
        default: 'main'

permissions:
  id-token: write
  contents: read

env:
  AZURE_RESOURCE_GROUP_NAME: 'rg-${{ secrets.AZURE_ENV_NAME }}'
  AZURE_APIM_NAME: 'apim-${{ secrets.AZURE_ENV_NAME }}'

jobs:
  deploy_azure:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        app: ${{ fromJson(inputs.matrix_json) }}

    env:
      AZURE_FNCAPP_NAME: 'fncapp-${{ secrets.AZURE_ENV_NAME }}-${{ matrix.app.suffix }}'

    steps:
    - name: Download Function app artifact
      uses: actions/download-artifact@v3
      with:
        path: ${{ github.workspace }}/published

    - name: Zip Function app artifact
      shell: pwsh
      run: |
        $destination_path = "published/fncapp.zip"

        Compress-Archive -Path published/${{ inputs.artifact_name }}-${{ matrix.app.name }}/* -DestinationPath $destination_path

        echo "AZURE_FNCAPP_PATH=$destination_path" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf-8 -Append

    - name: Sign in to Azure
      uses: azure/login@v1
      with:
        # creds: ${{ secrets.AZURE_CREDENTIALS }}
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Deploy FunctionApp artifact to Azure
      shell: bash
      run: |
        az functionapp deploy \
          -g ${{ env.AZURE_RESOURCE_GROUP_NAME }} \
          -n ${{ env.AZURE_FNCAPP_NAME }} \
          --src-path ${{ env.AZURE_FNCAPP_PATH }} \
          --type zip \
          --verbose

    - name: Update app settings
      shell: bash
      run: |
        filename="appsettings-${{ matrix.app.name }}.json"
        uri="https://raw.githubusercontent.com/${{ github.repository }}/${{ inputs.github_branch_name }}/custom-connectors-in-a-day/infra/$filename"
        appsettings=$(curl $uri)
        appsettings_length=$(echo $appsettings | jq '. | length')
        for (( i=0; i<$appsettings_length; i++ ))
        do
          appsettings_name=$(echo $appsettings | jq --arg i "$i" '.[$i|fromjson].name' -r)
          appsettings_value=$(echo $appsettings | jq --arg i "$i" '.[$i|fromjson].value' -r)

          appsettings_updated=$(az functionapp config appsettings set -g ${{ env.AZURE_RESOURCE_GROUP_NAME }} -n ${{ env.AZURE_FNCAPP_NAME }} --settings $appsettings_name="$appsettings_value")
        done

    # - name: Update app settings on Basic Auth
    #   if: matrix.app.name == 'basicauth'
    #   shell: bash
    #   run: |
    #     appsettings_updated=$(az functionapp config appsettings set \
    #       -g ${{ env.AZURE_RESOURCE_GROUP_NAME }} \
    #       -n ${{ env.AZURE_FNCAPP_NAME }} \
    #       --settings Atlassian__InstanceName=${{ secrets.ATLASSIAN_INSTANCE_NAME }})

    # - name: Update function key on APIM
    #   shell: bash
    #   run: |
    #     fncapp_key=$(az functionapp keys list \
    #       -g ${{ env.AZURE_RESOURCE_GROUP_NAME }} \
    #       -n ${{ env.AZURE_FNCAPP_NAME }} \
    #       --query "functionKeys.default" -o tsv)

    #     apim_nv=$(az apim nv update \
    #       -g ${{ env.AZURE_RESOURCE_GROUP_NAME }} \
    #       -n ${{ env.AZURE_APIM_NAME }} \
    #       --named-value-id X_FUNCTIONS_KEY_${{ matrix.app.nv }} \
    #       --value $fncapp_key)
